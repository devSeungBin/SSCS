@startuml initialMount(완료)
'http://localhost:3000/submitSchedule/:id

title initialMount(완료) seqeunce diagram

skinparam SequenceMessageAlignment center

participant Server order 30
participant Client order 20
actor User order 10

User -> Client: Move "/submitSchedule/:id"

Client -> Server: **GET /groups/:group_id/plans/:plan_id** \n Request "Read PlanInformation"

alt#Gold #Pink internal_error
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **500**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.comment" & "result.message"

else #Pink readPlanInformation_planNotFound
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **404**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.comment" \n & Redirect "/group/:id"

else #Pink readPlanInformation_accessDenied
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **401**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.message" \n & Redirect "/login"

else #LightYellow newUser_redirect
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **303**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Redirect "/initSetting"

else #LightBlue readPlanInformation_success
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **200**,
            plan:
                **id**,
                **name**,
                **group_id**,
                **plan_time**,
                **candidate_plan_time**,
                **vote_plan_time**,
                **plan_time_slot**,
                **schedule_deadline**,
                **vote_deadline**,
                **status**,
    end note

    Client -> Server: **GET /groups/:group_id/plans/:plan_id/schedule/:user_id** \n Request "Read userSchedule"

    alt#Gold #Pink internal_error
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **500**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Alert "result.comment" & "result.message"

    else #Pink readUserSchedule_notFound
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **404**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        alt #Gray "해당 그룹이 존재하지 않거나 그룹 참여자가 아닙니다."
            User <-- Client: Alert "result.comment" & Redirect "/userHome"

        else #Gray "제출된 일정이 없습니다."
        
        end

    else #Pink readUserSchedule_accessDenied
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **401**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Alert "result.message" \n & Redirect "/login"

    else #LightYellow newUser_redirect
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **303**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Redirect "/initSetting"

    else #LightBlue readUserSchedule_success
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **200**

        end note
        User <-- Client: Alert "제출된 일정이 존재합니다." \n & Redirect "/plan/:id"

    end

end

@enduml