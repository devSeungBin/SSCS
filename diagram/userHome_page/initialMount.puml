@startuml initialMount
'http://localhost:3000/userHome

title initialMount seqeunce diagram

skinparam SequenceMessageAlignment center

participant Server order 30
participant Client order 20
actor User order 10

User -> Client: Move "/UserHome"

Client -> Server: **GET /users** \n Request "Read UserInformation"

alt#Gold #Pink Failure
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **401** or **404** or **500**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.message" \n & Redirect "/login"

else #LightYellow Redirect
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **303**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.comment" \n & Redirect "/initSetting"

else #LightBlue Success
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **200**,
            user:
                **name**,
                **email**,
                **provider**,
                **calender_id**
            ,
            preference:
                **day_preference**,
                **time_preference**
    end note

    Client -> Server: **GET /groups** \n Request "Read UserGroupList"

    alt#Gold #Pink Failure
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **401** or **500**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.message" \n & Redirect "/login"

    else #LightYellow Redirect
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **303**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Alert "result.comment" \n & Redirect "/initSetting"

    else #LightBlue Success
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **200**, **404**,
                groups: [{
                    id: "**groupId**",
                    name: "**groupName**",
                    user_count: "**groupUsercount**"
                }, ...]
                or
                **null**
        end note

        Client -> Server: **GET /users/plans** \n Request "Read UserPlanList"

        alt#Gold #Pink Failure
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **401** or **500**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Alert "result.message" \n & Redirect "/login"

        else #LightYellow Redirect
            Client <-- Server: Reponse "JSON"
            note left
                result:
                    statusCode: **303**,
                    comment: "**error comment**",
                    message: "**error message**"
            end note
            User <-- Client: Alert "result.comment" \n & Redirect "/initSetting"

        else #LightBlue Success
            Client <-- Server: Reponse "JSON"
            note left
                result:
                    statusCode: **200**, **404**,
                    plans: [{
                        id: "**planId**",
                        name: "**planName**",
                        group: "**groupId**",
                        plan_time: "**planTime**",
                        schedule_deadline: "**planScheduleDeadline**",
                        vote_deadline: "**planVoteDeadline**",
                        status: "**planStatus**"
                    }, ...]
                    or
                    **null**
            end note

        end

    end

end



@enduml