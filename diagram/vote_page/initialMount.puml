@startuml initialMount(완료)
'http://localhost:3000/vote/:id

title initialMount(완료) seqeunce diagram

skinparam SequenceMessageAlignment center

participant Server order 30
participant Client order 20
actor User order 10

User -> Client: Move "/vote/:id"

Client -> Server: **GET /groups/:group_id/plans/:plan_id** \n Request "Read PlanInformation"

alt#Gold #Pink internal_error
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **500**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.comment" & "result.message"

else #Pink readPlanInformation_planNotFound
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **404**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.comment" \n & Redirect "/group/:id"

else #Pink readPlanInformation_accessDenied
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **401**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Alert "result.message" \n & Redirect "/login"

else #LightYellow newUser_redirect
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **303**,
            comment: "**error comment**",
            message: "**error message**"
    end note
    User <-- Client: Redirect "/initSetting"

else #LightBlue readPlanInformation_success
    Client <-- Server: Reponse "JSON"
    note left
        result:
            statusCode: **200**,
            plan:
                **id**,
                **candidiate_plan_time**,
                **vote_deadline**
    end note
    Client -> Server: **GET /groups/:group_id/members** \n Request "Read GroupParticipantList"

    alt#Gold #Pink internal_error
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **500**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Alert "result.comment" & "result.message"

    else #Pink readGroupParticipantList_groupNotFound
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **404**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Alert "result.comment" \n & Redirect "/userHome"

    else #Pink readGroupParticipantList_accessDenied
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **401**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Alert "result.message" \n & Redirect "/login"

    else #LightYellow newUser_redirect
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **303**,
                comment: "**error comment**",
                message: "**error message**"
        end note
        User <-- Client: Redirect "/initSetting"

    else #LightBlue readGroupParticipantList_success
        Client <-- Server: Reponse "JSON"
        note left
            result:
                statusCode: **200**,
                participants: [{
                    **id**,
                    **name**,
                    **user_id**,
                    **group_id**
                }, ...]
        end note
        
    end

end

@enduml